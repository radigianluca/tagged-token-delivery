

======================================================


New (Producer,Consumer) pair: (BB1, BB2)

Consumer of type type = "Merge!!


#############################################
Right before calling calculate_F_supp
The f_cons is (not considering negations!!): 
The f_prod is (not considering negations!!): 

#############################################
Right after returning from calculate_F_supp
The f_supp is (not considering negations!!): 


======================================================


New (Producer,Consumer) pair: (BB2, BB2)

Consumer of type type = "Merge!!


		 Triggering the producer == consumer case!!!!

	 NEW DEUBUG INFO: The original producer is in BB1

#############################################
Right before calling calculate_F_supp
The f_cons is (not considering negations!!): C4 &  + 
The f_prod is (not considering negations!!): 

#############################################
Right after returning from calculate_F_supp
The f_supp is (not considering negations!!): C4 &  + 

#############################################
Inside applyShannon function
The function before converting it to a string is (not considering negations!!): C4 &  + 

#############################################
Inside new_get_binary_string_minterms_Shannons function
The function before converting it to a string is (not considering negations!!): C4 &  + 

********* Inside get_binary_string_minterms *******************
	Printing the minterms_only_in_binary with dontcare bits:
0

	Printing the f_supp after converting it to string
0 + 


**********************************************


Printing the funct_vec of the expression initially
not C4 &  + 



Inside hasMultipleVariables!

The list of var_index of these variables is: 
3, 
The size of present_variables is: 1
Leaving hasMultipleVariables!

Not many variables to do Shannon's!
