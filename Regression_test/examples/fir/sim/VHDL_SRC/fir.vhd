-- ==============================================================
-- Generated by Dot2Vhdl ver. 2.0
-- File created: Sat Mar 25 09:22:01 2023

-- ==============================================================
library IEEE; 
use IEEE.std_logic_1164.all; 
use IEEE.numeric_std.all; 
use work.customTypes.all; 
-- ==============================================================
entity fir is 
port (
	clk:  in std_logic;
	rst:  in std_logic;
	start_in:  in std_logic_vector (0 downto 0);
	start_valid:  in std_logic;
	start_ready:  out std_logic;
	end_out:  out std_logic_vector (31 downto 0);
	end_valid:  out std_logic;
	end_ready:  in std_logic;
	arg_1_din : in std_logic_vector (31 downto 0);
	arg_1_valid_in : in std_logic;
	arg_1_ready_out : out std_logic);
end;

architecture behavioral of fir is 

	signal arg_1_clk : std_logic;
	signal arg_1_rst : std_logic;
	signal arg_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal arg_1_pValidArray_0 : std_logic;
	signal arg_1_readyArray_0 : std_logic;
	signal arg_1_nReadyArray_0 : std_logic;
	signal arg_1_validArray_0 : std_logic;
	signal arg_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal cst_0_clk : std_logic;
	signal cst_0_rst : std_logic;
	signal cst_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_0_pValidArray_0 : std_logic;
	signal cst_0_readyArray_0 : std_logic;
	signal cst_0_nReadyArray_0 : std_logic;
	signal cst_0_validArray_0 : std_logic;
	signal cst_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal start_0_clk : std_logic;
	signal start_0_rst : std_logic;
	signal start_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal start_0_pValidArray_0 : std_logic;
	signal start_0_readyArray_0 : std_logic;
	signal start_0_nReadyArray_0 : std_logic;
	signal start_0_validArray_0 : std_logic;
	signal start_0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal forkC_2_clk : std_logic;
	signal forkC_2_rst : std_logic;
	signal forkC_2_dataInArray_0 : std_logic_vector(0 downto 0);
	signal forkC_2_pValidArray_0 : std_logic;
	signal forkC_2_readyArray_0 : std_logic;
	signal forkC_2_nReadyArray_0 : std_logic;
	signal forkC_2_validArray_0 : std_logic;
	signal forkC_2_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal forkC_2_nReadyArray_1 : std_logic;
	signal forkC_2_validArray_1 : std_logic;
	signal forkC_2_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal phi_0_clk : std_logic;
	signal phi_0_rst : std_logic;
	signal phi_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phi_0_dataInArray_1 : std_logic_vector(31 downto 0);
	signal phi_0_dataInArray_2 : std_logic_vector(31 downto 0);
	signal phi_0_pValidArray_0 : std_logic;
	signal phi_0_pValidArray_1 : std_logic;
	signal phi_0_pValidArray_2 : std_logic;
	signal phi_0_readyArray_0 : std_logic;
	signal phi_0_readyArray_1 : std_logic;
	signal phi_0_readyArray_2 : std_logic;
	signal phi_0_nReadyArray_0 : std_logic;
	signal phi_0_validArray_0 : std_logic;
	signal phi_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phi_1_clk : std_logic;
	signal phi_1_rst : std_logic;
	signal phi_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phi_1_dataInArray_1 : std_logic_vector(31 downto 0);
	signal phi_1_dataInArray_2 : std_logic_vector(31 downto 0);
	signal phi_1_pValidArray_0 : std_logic;
	signal phi_1_pValidArray_1 : std_logic;
	signal phi_1_pValidArray_2 : std_logic;
	signal phi_1_readyArray_0 : std_logic;
	signal phi_1_readyArray_1 : std_logic;
	signal phi_1_readyArray_2 : std_logic;
	signal phi_1_nReadyArray_0 : std_logic;
	signal phi_1_validArray_0 : std_logic;
	signal phi_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal cst_1_clk : std_logic;
	signal cst_1_rst : std_logic;
	signal cst_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_1_pValidArray_0 : std_logic;
	signal cst_1_readyArray_0 : std_logic;
	signal cst_1_nReadyArray_0 : std_logic;
	signal cst_1_validArray_0 : std_logic;
	signal cst_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal mul_3_clk : std_logic;
	signal mul_3_rst : std_logic;
	signal mul_3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal mul_3_dataInArray_1 : std_logic_vector(31 downto 0);
	signal mul_3_pValidArray_0 : std_logic;
	signal mul_3_pValidArray_1 : std_logic;
	signal mul_3_readyArray_0 : std_logic;
	signal mul_3_readyArray_1 : std_logic;
	signal mul_3_nReadyArray_0 : std_logic;
	signal mul_3_validArray_0 : std_logic;
	signal mul_3_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal cst_2_clk : std_logic;
	signal cst_2_rst : std_logic;
	signal cst_2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_2_pValidArray_0 : std_logic;
	signal cst_2_readyArray_0 : std_logic;
	signal cst_2_nReadyArray_0 : std_logic;
	signal cst_2_validArray_0 : std_logic;
	signal cst_2_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal add_4_clk : std_logic;
	signal add_4_rst : std_logic;
	signal add_4_dataInArray_0 : std_logic_vector(31 downto 0);
	signal add_4_dataInArray_1 : std_logic_vector(31 downto 0);
	signal add_4_pValidArray_0 : std_logic;
	signal add_4_pValidArray_1 : std_logic;
	signal add_4_readyArray_0 : std_logic;
	signal add_4_readyArray_1 : std_logic;
	signal add_4_nReadyArray_0 : std_logic;
	signal add_4_validArray_0 : std_logic;
	signal add_4_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal cst_3_clk : std_logic;
	signal cst_3_rst : std_logic;
	signal cst_3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_3_pValidArray_0 : std_logic;
	signal cst_3_readyArray_0 : std_logic;
	signal cst_3_nReadyArray_0 : std_logic;
	signal cst_3_validArray_0 : std_logic;
	signal cst_3_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal icmp_5_clk : std_logic;
	signal icmp_5_rst : std_logic;
	signal icmp_5_dataInArray_0 : std_logic_vector(31 downto 0);
	signal icmp_5_dataInArray_1 : std_logic_vector(31 downto 0);
	signal icmp_5_pValidArray_0 : std_logic;
	signal icmp_5_pValidArray_1 : std_logic;
	signal icmp_5_readyArray_0 : std_logic;
	signal icmp_5_readyArray_1 : std_logic;
	signal icmp_5_nReadyArray_0 : std_logic;
	signal icmp_5_validArray_0 : std_logic;
	signal icmp_5_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal phiC_2_clk : std_logic;
	signal phiC_2_rst : std_logic;
	signal phiC_2_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phiC_2_dataInArray_1 : std_logic_vector(0 downto 0);
	signal phiC_2_dataInArray_2 : std_logic_vector(0 downto 0);
	signal phiC_2_pValidArray_0 : std_logic;
	signal phiC_2_pValidArray_1 : std_logic;
	signal phiC_2_pValidArray_2 : std_logic;
	signal phiC_2_readyArray_0 : std_logic;
	signal phiC_2_readyArray_1 : std_logic;
	signal phiC_2_readyArray_2 : std_logic;
	signal phiC_2_nReadyArray_0 : std_logic;
	signal phiC_2_validArray_0 : std_logic;
	signal phiC_2_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal branch_0_clk : std_logic;
	signal branch_0_rst : std_logic;
	signal branch_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_0_dataInArray_1 : std_logic_vector(0 downto 0);
	signal branch_0_pValidArray_0 : std_logic;
	signal branch_0_pValidArray_1 : std_logic;
	signal branch_0_readyArray_0 : std_logic;
	signal branch_0_readyArray_1 : std_logic;
	signal branch_0_nReadyArray_0 : std_logic;
	signal branch_0_validArray_0 : std_logic;
	signal branch_0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_0_nReadyArray_1 : std_logic;
	signal branch_0_validArray_1 : std_logic;
	signal branch_0_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal branch_1_clk : std_logic;
	signal branch_1_rst : std_logic;
	signal branch_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_1_dataInArray_1 : std_logic_vector(0 downto 0);
	signal branch_1_pValidArray_0 : std_logic;
	signal branch_1_pValidArray_1 : std_logic;
	signal branch_1_readyArray_0 : std_logic;
	signal branch_1_readyArray_1 : std_logic;
	signal branch_1_nReadyArray_0 : std_logic;
	signal branch_1_validArray_0 : std_logic;
	signal branch_1_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_1_nReadyArray_1 : std_logic;
	signal branch_1_validArray_1 : std_logic;
	signal branch_1_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal branchC_3_clk : std_logic;
	signal branchC_3_rst : std_logic;
	signal branchC_3_dataInArray_0 : std_logic_vector(0 downto 0);
	signal branchC_3_dataInArray_1 : std_logic_vector(0 downto 0);
	signal branchC_3_pValidArray_0 : std_logic;
	signal branchC_3_pValidArray_1 : std_logic;
	signal branchC_3_readyArray_0 : std_logic;
	signal branchC_3_readyArray_1 : std_logic;
	signal branchC_3_nReadyArray_0 : std_logic;
	signal branchC_3_validArray_0 : std_logic;
	signal branchC_3_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal branchC_3_nReadyArray_1 : std_logic;
	signal branchC_3_validArray_1 : std_logic;
	signal branchC_3_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal fork_0_clk : std_logic;
	signal fork_0_rst : std_logic;
	signal fork_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_0_pValidArray_0 : std_logic;
	signal fork_0_readyArray_0 : std_logic;
	signal fork_0_nReadyArray_0 : std_logic;
	signal fork_0_validArray_0 : std_logic;
	signal fork_0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_0_nReadyArray_1 : std_logic;
	signal fork_0_validArray_1 : std_logic;
	signal fork_0_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal fork_1_clk : std_logic;
	signal fork_1_rst : std_logic;
	signal fork_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_1_pValidArray_0 : std_logic;
	signal fork_1_readyArray_0 : std_logic;
	signal fork_1_nReadyArray_0 : std_logic;
	signal fork_1_validArray_0 : std_logic;
	signal fork_1_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_1_nReadyArray_1 : std_logic;
	signal fork_1_validArray_1 : std_logic;
	signal fork_1_dataOutArray_1 : std_logic_vector(31 downto 0);
	signal fork_1_nReadyArray_2 : std_logic;
	signal fork_1_validArray_2 : std_logic;
	signal fork_1_dataOutArray_2 : std_logic_vector(31 downto 0);
	signal fork_1_nReadyArray_3 : std_logic;
	signal fork_1_validArray_3 : std_logic;
	signal fork_1_dataOutArray_3 : std_logic_vector(31 downto 0);
	signal fork_1_nReadyArray_4 : std_logic;
	signal fork_1_validArray_4 : std_logic;
	signal fork_1_dataOutArray_4 : std_logic_vector(31 downto 0);
	signal fork_1_nReadyArray_5 : std_logic;
	signal fork_1_validArray_5 : std_logic;
	signal fork_1_dataOutArray_5 : std_logic_vector(31 downto 0);

	signal forkC_3_clk : std_logic;
	signal forkC_3_rst : std_logic;
	signal forkC_3_dataInArray_0 : std_logic_vector(0 downto 0);
	signal forkC_3_pValidArray_0 : std_logic;
	signal forkC_3_readyArray_0 : std_logic;
	signal forkC_3_nReadyArray_0 : std_logic;
	signal forkC_3_validArray_0 : std_logic;
	signal forkC_3_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal forkC_3_nReadyArray_1 : std_logic;
	signal forkC_3_validArray_1 : std_logic;
	signal forkC_3_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal forkC_3_nReadyArray_2 : std_logic;
	signal forkC_3_validArray_2 : std_logic;
	signal forkC_3_dataOutArray_2 : std_logic_vector(0 downto 0);
	signal forkC_3_nReadyArray_3 : std_logic;
	signal forkC_3_validArray_3 : std_logic;
	signal forkC_3_dataOutArray_3 : std_logic_vector(0 downto 0);

	signal ret_0_clk : std_logic;
	signal ret_0_rst : std_logic;
	signal ret_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal ret_0_pValidArray_0 : std_logic;
	signal ret_0_readyArray_0 : std_logic;
	signal ret_0_nReadyArray_0 : std_logic;
	signal ret_0_validArray_0 : std_logic;
	signal ret_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal sink_0_clk : std_logic;
	signal sink_0_rst : std_logic;
	signal sink_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal sink_0_pValidArray_0 : std_logic;
	signal sink_0_readyArray_0 : std_logic;

	signal sink_1_clk : std_logic;
	signal sink_1_rst : std_logic;
	signal sink_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal sink_1_pValidArray_0 : std_logic;
	signal sink_1_readyArray_0 : std_logic;

	signal end_0_clk : std_logic;
	signal end_0_rst : std_logic;
	signal end_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal end_0_pValidArray_0 : std_logic;
	signal end_0_readyArray_0 : std_logic;
	signal end_0_nReadyArray_0 : std_logic;
	signal end_0_validArray_0 : std_logic;
	signal end_0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal end_0_validArray_1 :  std_logic;
	signal end_0_dataOutArray_1 :  std_logic_vector (31 downto 0);
	signal end_0_nReadyArray_1 :  std_logic;

	signal buffI_0_clk : std_logic;
	signal buffI_0_rst : std_logic;
	signal buffI_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal buffI_0_pValidArray_0 : std_logic;
	signal buffI_0_readyArray_0 : std_logic;
	signal buffI_0_nReadyArray_0 : std_logic;
	signal buffI_0_validArray_0 : std_logic;
	signal buffI_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal buffI_1_clk : std_logic;
	signal buffI_1_rst : std_logic;
	signal buffI_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal buffI_1_pValidArray_0 : std_logic;
	signal buffI_1_readyArray_0 : std_logic;
	signal buffI_1_nReadyArray_0 : std_logic;
	signal buffI_1_validArray_0 : std_logic;
	signal buffI_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal buffA_2_clk : std_logic;
	signal buffA_2_rst : std_logic;
	signal buffA_2_dataInArray_0 : std_logic_vector(0 downto 0);
	signal buffA_2_pValidArray_0 : std_logic;
	signal buffA_2_readyArray_0 : std_logic;
	signal buffA_2_nReadyArray_0 : std_logic;
	signal buffA_2_validArray_0 : std_logic;
	signal buffA_2_dataOutArray_0 : std_logic_vector(0 downto 0);

begin


	arg_1_clk <= clk;
	arg_1_rst <= rst;
	arg_1_dataInArray_0 <= arg_1_din;
	arg_1_pValidArray_0 <= arg_1_valid_in;
	arg_1_ready_out <= arg_1_readyArray_0;
	phi_0_pValidArray_1 <= arg_1_validArray_0;
	arg_1_nReadyArray_0 <= phi_0_readyArray_1;
	phi_0_dataInArray_1 <= std_logic_vector (resize(unsigned(arg_1_dataOutArray_0),phi_0_dataInArray_1'length));

	cst_0_clk <= clk;
	cst_0_rst <= rst;
	phi_1_pValidArray_1 <= cst_0_validArray_0;
	cst_0_nReadyArray_0 <= phi_1_readyArray_1;
	phi_1_dataInArray_1 <= std_logic_vector (resize(unsigned(cst_0_dataOutArray_0),phi_1_dataInArray_1'length));

	start_0_clk <= clk;
	start_0_rst <= rst;
	start_0_pValidArray_0 <= start_valid;
	start_ready <= start_0_readyArray_0;
	forkC_2_pValidArray_0 <= start_0_validArray_0;
	start_0_nReadyArray_0 <= forkC_2_readyArray_0;
	forkC_2_dataInArray_0 <= std_logic_vector (resize(unsigned(start_0_dataOutArray_0),forkC_2_dataInArray_0'length));

	forkC_2_clk <= clk;
	forkC_2_rst <= rst;
	cst_0_pValidArray_0 <= forkC_2_validArray_0;
	forkC_2_nReadyArray_0 <= cst_0_readyArray_0;
	cst_0_dataInArray_0 <= "00000000000000000000000000000000";
	phiC_2_pValidArray_1 <= forkC_2_validArray_1;
	forkC_2_nReadyArray_1 <= phiC_2_readyArray_1;
	phiC_2_dataInArray_1 <= std_logic_vector (resize(unsigned(forkC_2_dataOutArray_1),phiC_2_dataInArray_1'length));

	phi_0_clk <= clk;
	phi_0_rst <= rst;
	buffI_0_pValidArray_0 <= phi_0_validArray_0;
	phi_0_nReadyArray_0 <= buffI_0_readyArray_0;
	buffI_0_dataInArray_0 <= std_logic_vector (resize(unsigned(phi_0_dataOutArray_0),buffI_0_dataInArray_0'length));

	phi_1_clk <= clk;
	phi_1_rst <= rst;
	buffI_1_pValidArray_0 <= phi_1_validArray_0;
	phi_1_nReadyArray_0 <= buffI_1_readyArray_0;
	buffI_1_dataInArray_0 <= std_logic_vector (resize(unsigned(phi_1_dataOutArray_0),buffI_1_dataInArray_0'length));

	cst_1_clk <= clk;
	cst_1_rst <= rst;
	mul_3_pValidArray_1 <= cst_1_validArray_0;
	cst_1_nReadyArray_0 <= mul_3_readyArray_1;
	mul_3_dataInArray_1 <= std_logic_vector (resize(unsigned(cst_1_dataOutArray_0),mul_3_dataInArray_1'length));

	mul_3_clk <= clk;
	mul_3_rst <= rst;
	branch_0_pValidArray_0 <= mul_3_validArray_0;
	mul_3_nReadyArray_0 <= branch_0_readyArray_0;
	branch_0_dataInArray_0 <= std_logic_vector (resize(unsigned(mul_3_dataOutArray_0),branch_0_dataInArray_0'length));

	cst_2_clk <= clk;
	cst_2_rst <= rst;
	add_4_pValidArray_1 <= cst_2_validArray_0;
	cst_2_nReadyArray_0 <= add_4_readyArray_1;
	add_4_dataInArray_1 <= std_logic_vector (resize(unsigned(cst_2_dataOutArray_0),add_4_dataInArray_1'length));

	add_4_clk <= clk;
	add_4_rst <= rst;
	fork_0_pValidArray_0 <= add_4_validArray_0;
	add_4_nReadyArray_0 <= fork_0_readyArray_0;
	fork_0_dataInArray_0 <= std_logic_vector (resize(unsigned(add_4_dataOutArray_0),fork_0_dataInArray_0'length));

	cst_3_clk <= clk;
	cst_3_rst <= rst;
	icmp_5_pValidArray_1 <= cst_3_validArray_0;
	cst_3_nReadyArray_0 <= icmp_5_readyArray_1;
	icmp_5_dataInArray_1 <= std_logic_vector (resize(unsigned(cst_3_dataOutArray_0),icmp_5_dataInArray_1'length));

	icmp_5_clk <= clk;
	icmp_5_rst <= rst;
	fork_1_pValidArray_0 <= icmp_5_validArray_0;
	icmp_5_nReadyArray_0 <= fork_1_readyArray_0;
	fork_1_dataInArray_0 <= std_logic_vector (resize(unsigned(icmp_5_dataOutArray_0),fork_1_dataInArray_0'length));

	phiC_2_clk <= clk;
	phiC_2_rst <= rst;
	buffA_2_pValidArray_0 <= phiC_2_validArray_0;
	phiC_2_nReadyArray_0 <= buffA_2_readyArray_0;
	buffA_2_dataInArray_0 <= std_logic_vector (resize(unsigned(phiC_2_dataOutArray_0),buffA_2_dataInArray_0'length));

	branch_0_clk <= clk;
	branch_0_rst <= rst;
	ret_0_pValidArray_0 <= branch_0_validArray_0;
	branch_0_nReadyArray_0 <= ret_0_readyArray_0;
	ret_0_dataInArray_0 <= std_logic_vector (resize(unsigned(branch_0_dataOutArray_0),ret_0_dataInArray_0'length));
	phi_0_pValidArray_2 <= branch_0_validArray_1;
	branch_0_nReadyArray_1 <= phi_0_readyArray_2;
	phi_0_dataInArray_2 <= std_logic_vector (resize(unsigned(branch_0_dataOutArray_1),phi_0_dataInArray_2'length));

	branch_1_clk <= clk;
	branch_1_rst <= rst;
	sink_0_pValidArray_0 <= branch_1_validArray_0;
	branch_1_nReadyArray_0 <= sink_0_readyArray_0;
	sink_0_dataInArray_0 <= std_logic_vector (resize(unsigned(branch_1_dataOutArray_0),sink_0_dataInArray_0'length));
	phi_1_pValidArray_2 <= branch_1_validArray_1;
	branch_1_nReadyArray_1 <= phi_1_readyArray_2;
	phi_1_dataInArray_2 <= std_logic_vector (resize(unsigned(branch_1_dataOutArray_1),phi_1_dataInArray_2'length));

	branchC_3_clk <= clk;
	branchC_3_rst <= rst;
	sink_1_pValidArray_0 <= branchC_3_validArray_0;
	branchC_3_nReadyArray_0 <= sink_1_readyArray_0;
	sink_1_dataInArray_0 <= std_logic_vector (resize(unsigned(branchC_3_dataOutArray_0),sink_1_dataInArray_0'length));
	phiC_2_pValidArray_2 <= branchC_3_validArray_1;
	branchC_3_nReadyArray_1 <= phiC_2_readyArray_2;
	phiC_2_dataInArray_2 <= std_logic_vector (resize(unsigned(branchC_3_dataOutArray_1),phiC_2_dataInArray_2'length));

	fork_0_clk <= clk;
	fork_0_rst <= rst;
	icmp_5_pValidArray_0 <= fork_0_validArray_0;
	fork_0_nReadyArray_0 <= icmp_5_readyArray_0;
	icmp_5_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_0_dataOutArray_0),icmp_5_dataInArray_0'length));
	branch_1_pValidArray_0 <= fork_0_validArray_1;
	fork_0_nReadyArray_1 <= branch_1_readyArray_0;
	branch_1_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_0_dataOutArray_1),branch_1_dataInArray_0'length));

	fork_1_clk <= clk;
	fork_1_rst <= rst;
	branch_0_pValidArray_1 <= fork_1_validArray_0;
	fork_1_nReadyArray_0 <= branch_0_readyArray_1;
	branch_0_dataInArray_1 <= not std_logic_vector (resize(unsigned(fork_1_dataOutArray_0),branch_0_dataInArray_1'length));
	branch_1_pValidArray_1 <= fork_1_validArray_1;
	fork_1_nReadyArray_1 <= branch_1_readyArray_1;
	branch_1_dataInArray_1 <= not std_logic_vector (resize(unsigned(fork_1_dataOutArray_1),branch_1_dataInArray_1'length));
	branchC_3_pValidArray_1 <= fork_1_validArray_2;
	fork_1_nReadyArray_2 <= branchC_3_readyArray_1;
	branchC_3_dataInArray_1 <= not std_logic_vector (resize(unsigned(fork_1_dataOutArray_2),branchC_3_dataInArray_1'length));
	phi_0_pValidArray_0 <= fork_1_validArray_3;
	fork_1_nReadyArray_3 <= phi_0_readyArray_0;
	phi_0_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_1_dataOutArray_3),phi_0_dataInArray_0'length));
	phi_1_pValidArray_0 <= fork_1_validArray_4;
	fork_1_nReadyArray_4 <= phi_1_readyArray_0;
	phi_1_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_1_dataOutArray_4),phi_1_dataInArray_0'length));
	phiC_2_pValidArray_0 <= fork_1_validArray_5;
	fork_1_nReadyArray_5 <= phiC_2_readyArray_0;
	phiC_2_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_1_dataOutArray_5),phiC_2_dataInArray_0'length));

	forkC_3_clk <= clk;
	forkC_3_rst <= rst;
	cst_1_pValidArray_0 <= forkC_3_validArray_0;
	forkC_3_nReadyArray_0 <= cst_1_readyArray_0;
	cst_1_dataInArray_0 <= "00000000000000000000000000000101";
	branchC_3_pValidArray_0 <= forkC_3_validArray_1;
	forkC_3_nReadyArray_1 <= branchC_3_readyArray_0;
	branchC_3_dataInArray_0 <= std_logic_vector (resize(unsigned(forkC_3_dataOutArray_1),branchC_3_dataInArray_0'length));
	cst_2_pValidArray_0 <= forkC_3_validArray_2;
	forkC_3_nReadyArray_2 <= cst_2_readyArray_0;
	cst_2_dataInArray_0 <= "00000000000000000000000000000001";
	cst_3_pValidArray_0 <= forkC_3_validArray_3;
	forkC_3_nReadyArray_3 <= cst_3_readyArray_0;
	cst_3_dataInArray_0 <= "00000000000000000000000000000010";

	ret_0_clk <= clk;
	ret_0_rst <= rst;
	end_0_pValidArray_0 <= ret_0_validArray_0;
	ret_0_nReadyArray_0 <= end_0_readyArray_0;
	end_0_dataInArray_0 <= std_logic_vector (resize(unsigned(ret_0_dataOutArray_0),end_0_dataInArray_0'length));

	sink_0_clk <= clk;
	sink_0_rst <= rst;

	sink_1_clk <= clk;
	sink_1_rst <= rst;

	end_0_clk <= clk;
	end_0_rst <= rst;
	end_valid <= end_0_validArray_0;
	end_out <= end_0_dataOutArray_0;
	end_0_nReadyArray_0 <= end_ready;

	buffI_0_clk <= clk;
	buffI_0_rst <= rst;
	mul_3_pValidArray_0 <= buffI_0_validArray_0;
	buffI_0_nReadyArray_0 <= mul_3_readyArray_0;
	mul_3_dataInArray_0 <= std_logic_vector (resize(unsigned(buffI_0_dataOutArray_0),mul_3_dataInArray_0'length));

	buffI_1_clk <= clk;
	buffI_1_rst <= rst;
	add_4_pValidArray_0 <= buffI_1_validArray_0;
	buffI_1_nReadyArray_0 <= add_4_readyArray_0;
	add_4_dataInArray_0 <= std_logic_vector (resize(unsigned(buffI_1_dataOutArray_0),add_4_dataInArray_0'length));

	buffA_2_clk <= clk;
	buffA_2_rst <= rst;
	forkC_3_pValidArray_0 <= buffA_2_validArray_0;
	buffA_2_nReadyArray_0 <= forkC_3_readyArray_0;
	forkC_3_dataInArray_0 <= std_logic_vector (resize(unsigned(buffA_2_dataOutArray_0),forkC_3_dataInArray_0'length));

arg_1: entity work.start_node(arch) generic map (1,1,32,32)
port map (
	clk => arg_1_clk,
	rst => arg_1_rst,
	dataInArray(0) => arg_1_dataInArray_0,
	pValidArray(0) => arg_1_pValidArray_0,
	readyArray(0) => arg_1_readyArray_0,
	nReadyArray(0) => arg_1_nReadyArray_0,
	validArray(0) => arg_1_validArray_0,
	dataOutArray(0) => arg_1_dataOutArray_0
);

cst_0: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_0_clk,
	rst => cst_0_rst,
	dataInArray(0) => cst_0_dataInArray_0,
	pValidArray(0) => cst_0_pValidArray_0,
	readyArray(0) => cst_0_readyArray_0,
	nReadyArray(0) => cst_0_nReadyArray_0,
	validArray(0) => cst_0_validArray_0,
	dataOutArray(0) => cst_0_dataOutArray_0
);

start_0: entity work.start_node(arch) generic map (1,1,1,1)
port map (
	clk => start_0_clk,
	rst => start_0_rst,
	dataInArray(0) => start_0_dataInArray_0,
	pValidArray(0) => start_0_pValidArray_0,
	readyArray(0) => start_0_readyArray_0,
	nReadyArray(0) => start_0_nReadyArray_0,
	validArray(0) => start_0_validArray_0,
	dataOutArray(0) => start_0_dataOutArray_0
);

forkC_2: entity work.fork(arch) generic map (1,2,1,1)
port map (
	clk => forkC_2_clk,
	rst => forkC_2_rst,
	dataInArray(0) => forkC_2_dataInArray_0,
	pValidArray(0) => forkC_2_pValidArray_0,
	readyArray(0) => forkC_2_readyArray_0,
	nReadyArray(0) => forkC_2_nReadyArray_0,
	nReadyArray(1) => forkC_2_nReadyArray_1,
	validArray(0) => forkC_2_validArray_0,
	validArray(1) => forkC_2_validArray_1,
	dataOutArray(0) => forkC_2_dataOutArray_0,
	dataOutArray(1) => forkC_2_dataOutArray_1
);

phi_0: entity work.LoopMux(arch) generic map (3,1,32,32,1)
port map (
	clk => phi_0_clk,
	rst => phi_0_rst,
	Condition(0) => phi_0_dataInArray_0,
	dataInArray(0) => phi_0_dataInArray_1,
	dataInArray(1) => phi_0_dataInArray_2,
	pValidArray(0) => phi_0_pValidArray_0,
	pValidArray(1) => phi_0_pValidArray_1,
	pValidArray(2) => phi_0_pValidArray_2,
	readyArray(0) => phi_0_readyArray_0,
	readyArray(1) => phi_0_readyArray_1,
	readyArray(2) => phi_0_readyArray_2,
	nReadyArray(0) => phi_0_nReadyArray_0,
	validArray(0) => phi_0_validArray_0,
	dataOutArray(0) => phi_0_dataOutArray_0
);

phi_1: entity work.LoopMux(arch) generic map (3,1,32,32,1)
port map (
	clk => phi_1_clk,
	rst => phi_1_rst,
	Condition(0) => phi_1_dataInArray_0,
	dataInArray(0) => phi_1_dataInArray_1,
	dataInArray(1) => phi_1_dataInArray_2,
	pValidArray(0) => phi_1_pValidArray_0,
	pValidArray(1) => phi_1_pValidArray_1,
	pValidArray(2) => phi_1_pValidArray_2,
	readyArray(0) => phi_1_readyArray_0,
	readyArray(1) => phi_1_readyArray_1,
	readyArray(2) => phi_1_readyArray_2,
	nReadyArray(0) => phi_1_nReadyArray_0,
	validArray(0) => phi_1_validArray_0,
	dataOutArray(0) => phi_1_dataOutArray_0
);

cst_1: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_1_clk,
	rst => cst_1_rst,
	dataInArray(0) => cst_1_dataInArray_0,
	pValidArray(0) => cst_1_pValidArray_0,
	readyArray(0) => cst_1_readyArray_0,
	nReadyArray(0) => cst_1_nReadyArray_0,
	validArray(0) => cst_1_validArray_0,
	dataOutArray(0) => cst_1_dataOutArray_0
);

mul_3: entity work.mul_op(arch) generic map (2,1,32,32)
port map (
	clk => mul_3_clk,
	rst => mul_3_rst,
	dataInArray(0) => mul_3_dataInArray_0,
	dataInArray(1) => mul_3_dataInArray_1,
	pValidArray(0) => mul_3_pValidArray_0,
	pValidArray(1) => mul_3_pValidArray_1,
	readyArray(0) => mul_3_readyArray_0,
	readyArray(1) => mul_3_readyArray_1,
	nReadyArray(0) => mul_3_nReadyArray_0,
	validArray(0) => mul_3_validArray_0,
	dataOutArray(0) => mul_3_dataOutArray_0
);

cst_2: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_2_clk,
	rst => cst_2_rst,
	dataInArray(0) => cst_2_dataInArray_0,
	pValidArray(0) => cst_2_pValidArray_0,
	readyArray(0) => cst_2_readyArray_0,
	nReadyArray(0) => cst_2_nReadyArray_0,
	validArray(0) => cst_2_validArray_0,
	dataOutArray(0) => cst_2_dataOutArray_0
);

add_4: entity work.add_op(arch) generic map (2,1,32,32)
port map (
	clk => add_4_clk,
	rst => add_4_rst,
	dataInArray(0) => add_4_dataInArray_0,
	dataInArray(1) => add_4_dataInArray_1,
	pValidArray(0) => add_4_pValidArray_0,
	pValidArray(1) => add_4_pValidArray_1,
	readyArray(0) => add_4_readyArray_0,
	readyArray(1) => add_4_readyArray_1,
	nReadyArray(0) => add_4_nReadyArray_0,
	validArray(0) => add_4_validArray_0,
	dataOutArray(0) => add_4_dataOutArray_0
);

cst_3: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_3_clk,
	rst => cst_3_rst,
	dataInArray(0) => cst_3_dataInArray_0,
	pValidArray(0) => cst_3_pValidArray_0,
	readyArray(0) => cst_3_readyArray_0,
	nReadyArray(0) => cst_3_nReadyArray_0,
	validArray(0) => cst_3_validArray_0,
	dataOutArray(0) => cst_3_dataOutArray_0
);

icmp_5: entity work.icmp_ult_op(arch) generic map (2,1,32,1)
port map (
	clk => icmp_5_clk,
	rst => icmp_5_rst,
	dataInArray(0) => icmp_5_dataInArray_0,
	dataInArray(1) => icmp_5_dataInArray_1,
	pValidArray(0) => icmp_5_pValidArray_0,
	pValidArray(1) => icmp_5_pValidArray_1,
	readyArray(0) => icmp_5_readyArray_0,
	readyArray(1) => icmp_5_readyArray_1,
	nReadyArray(0) => icmp_5_nReadyArray_0,
	validArray(0) => icmp_5_validArray_0,
	dataOutArray(0) => icmp_5_dataOutArray_0
);

phiC_2: entity work.LoopMux(arch) generic map (3,1,1,1,1)
port map (
	clk => phiC_2_clk,
	rst => phiC_2_rst,
	Condition(0) => phiC_2_dataInArray_0,
	dataInArray(0) => phiC_2_dataInArray_1,
	dataInArray(1) => phiC_2_dataInArray_2,
	pValidArray(0) => phiC_2_pValidArray_0,
	pValidArray(1) => phiC_2_pValidArray_1,
	pValidArray(2) => phiC_2_pValidArray_2,
	readyArray(0) => phiC_2_readyArray_0,
	readyArray(1) => phiC_2_readyArray_1,
	readyArray(2) => phiC_2_readyArray_2,
	nReadyArray(0) => phiC_2_nReadyArray_0,
	validArray(0) => phiC_2_validArray_0,
	dataOutArray(0) => phiC_2_dataOutArray_0
);

branch_0: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_0_clk,
	rst => branch_0_rst,
	dataInArray(0) => branch_0_dataInArray_0,
	Condition(0) => branch_0_dataInArray_1,
	pValidArray(0) => branch_0_pValidArray_0,
	pValidArray(1) => branch_0_pValidArray_1,
	readyArray(0) => branch_0_readyArray_0,
	readyArray(1) => branch_0_readyArray_1,
	nReadyArray(0) => branch_0_nReadyArray_0,
	nReadyArray(1) => branch_0_nReadyArray_1,
	validArray(0) => branch_0_validArray_0,
	validArray(1) => branch_0_validArray_1,
	dataOutArray(0) => branch_0_dataOutArray_0,
	dataOutArray(1) => branch_0_dataOutArray_1
);

branch_1: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_1_clk,
	rst => branch_1_rst,
	dataInArray(0) => branch_1_dataInArray_0,
	Condition(0) => branch_1_dataInArray_1,
	pValidArray(0) => branch_1_pValidArray_0,
	pValidArray(1) => branch_1_pValidArray_1,
	readyArray(0) => branch_1_readyArray_0,
	readyArray(1) => branch_1_readyArray_1,
	nReadyArray(0) => branch_1_nReadyArray_0,
	nReadyArray(1) => branch_1_nReadyArray_1,
	validArray(0) => branch_1_validArray_0,
	validArray(1) => branch_1_validArray_1,
	dataOutArray(0) => branch_1_dataOutArray_0,
	dataOutArray(1) => branch_1_dataOutArray_1
);

branchC_3: entity work.Branch(arch) generic map (2,2,1,1)
port map (
	clk => branchC_3_clk,
	rst => branchC_3_rst,
	dataInArray(0) => branchC_3_dataInArray_0,
	Condition(0) => branchC_3_dataInArray_1,
	pValidArray(0) => branchC_3_pValidArray_0,
	pValidArray(1) => branchC_3_pValidArray_1,
	readyArray(0) => branchC_3_readyArray_0,
	readyArray(1) => branchC_3_readyArray_1,
	nReadyArray(0) => branchC_3_nReadyArray_0,
	nReadyArray(1) => branchC_3_nReadyArray_1,
	validArray(0) => branchC_3_validArray_0,
	validArray(1) => branchC_3_validArray_1,
	dataOutArray(0) => branchC_3_dataOutArray_0,
	dataOutArray(1) => branchC_3_dataOutArray_1
);

fork_0: entity work.fork(arch) generic map (1,2,32,32)
port map (
	clk => fork_0_clk,
	rst => fork_0_rst,
	dataInArray(0) => fork_0_dataInArray_0,
	pValidArray(0) => fork_0_pValidArray_0,
	readyArray(0) => fork_0_readyArray_0,
	nReadyArray(0) => fork_0_nReadyArray_0,
	nReadyArray(1) => fork_0_nReadyArray_1,
	validArray(0) => fork_0_validArray_0,
	validArray(1) => fork_0_validArray_1,
	dataOutArray(0) => fork_0_dataOutArray_0,
	dataOutArray(1) => fork_0_dataOutArray_1
);

fork_1: entity work.fork(arch) generic map (1,6,32,32)
port map (
	clk => fork_1_clk,
	rst => fork_1_rst,
	dataInArray(0) => fork_1_dataInArray_0,
	pValidArray(0) => fork_1_pValidArray_0,
	readyArray(0) => fork_1_readyArray_0,
	nReadyArray(0) => fork_1_nReadyArray_0,
	nReadyArray(1) => fork_1_nReadyArray_1,
	nReadyArray(2) => fork_1_nReadyArray_2,
	nReadyArray(3) => fork_1_nReadyArray_3,
	nReadyArray(4) => fork_1_nReadyArray_4,
	nReadyArray(5) => fork_1_nReadyArray_5,
	validArray(0) => fork_1_validArray_0,
	validArray(1) => fork_1_validArray_1,
	validArray(2) => fork_1_validArray_2,
	validArray(3) => fork_1_validArray_3,
	validArray(4) => fork_1_validArray_4,
	validArray(5) => fork_1_validArray_5,
	dataOutArray(0) => fork_1_dataOutArray_0,
	dataOutArray(1) => fork_1_dataOutArray_1,
	dataOutArray(2) => fork_1_dataOutArray_2,
	dataOutArray(3) => fork_1_dataOutArray_3,
	dataOutArray(4) => fork_1_dataOutArray_4,
	dataOutArray(5) => fork_1_dataOutArray_5
);

forkC_3: entity work.fork(arch) generic map (1,4,1,1)
port map (
	clk => forkC_3_clk,
	rst => forkC_3_rst,
	dataInArray(0) => forkC_3_dataInArray_0,
	pValidArray(0) => forkC_3_pValidArray_0,
	readyArray(0) => forkC_3_readyArray_0,
	nReadyArray(0) => forkC_3_nReadyArray_0,
	nReadyArray(1) => forkC_3_nReadyArray_1,
	nReadyArray(2) => forkC_3_nReadyArray_2,
	nReadyArray(3) => forkC_3_nReadyArray_3,
	validArray(0) => forkC_3_validArray_0,
	validArray(1) => forkC_3_validArray_1,
	validArray(2) => forkC_3_validArray_2,
	validArray(3) => forkC_3_validArray_3,
	dataOutArray(0) => forkC_3_dataOutArray_0,
	dataOutArray(1) => forkC_3_dataOutArray_1,
	dataOutArray(2) => forkC_3_dataOutArray_2,
	dataOutArray(3) => forkC_3_dataOutArray_3
);

ret_0: entity work.ret_op(arch) generic map (1,1,32,32)
port map (
	clk => ret_0_clk,
	rst => ret_0_rst,
	dataInArray(0) => ret_0_dataInArray_0,
	pValidArray(0) => ret_0_pValidArray_0,
	readyArray(0) => ret_0_readyArray_0,
	nReadyArray(0) => ret_0_nReadyArray_0,
	validArray(0) => ret_0_validArray_0,
	dataOutArray(0) => ret_0_dataOutArray_0
);

sink_0: entity work.sink(arch) generic map (1,0,32,32)
port map (
	clk => sink_0_clk,
	rst => sink_0_rst,
	dataInArray(0) => sink_0_dataInArray_0,
	pValidArray(0) => sink_0_pValidArray_0,
	readyArray(0) => sink_0_readyArray_0
);

sink_1: entity work.sink(arch) generic map (1,0,1,32)
port map (
	clk => sink_1_clk,
	rst => sink_1_rst,
	dataInArray(0) => sink_1_dataInArray_0,
	pValidArray(0) => sink_1_pValidArray_0,
	readyArray(0) => sink_1_readyArray_0
);

end_0: entity work.end_node(arch) generic map (1,0,1,32,32)
port map (
	clk => end_0_clk,
	rst => end_0_rst,
	dataInArray(0) => end_0_dataInArray_0,
	pValidArray(0) => end_0_pValidArray_0,
	readyArray(0) => end_0_readyArray_0,
	dataOutArray(0) => end_0_dataOutArray_0,
	validArray(0) => end_0_validArray_0,
	nReadyArray(0) => end_0_nReadyArray_0
);

buffI_0: entity work.elasticBuffer(arch) generic map (1,1,32,32)
port map (
	clk => buffI_0_clk,
	rst => buffI_0_rst,
	dataInArray(0) => buffI_0_dataInArray_0,
	pValidArray(0) => buffI_0_pValidArray_0,
	readyArray(0) => buffI_0_readyArray_0,
	nReadyArray(0) => buffI_0_nReadyArray_0,
	validArray(0) => buffI_0_validArray_0,
	dataOutArray(0) => buffI_0_dataOutArray_0
);

buffI_1: entity work.elasticBuffer(arch) generic map (1,1,32,32)
port map (
	clk => buffI_1_clk,
	rst => buffI_1_rst,
	dataInArray(0) => buffI_1_dataInArray_0,
	pValidArray(0) => buffI_1_pValidArray_0,
	readyArray(0) => buffI_1_readyArray_0,
	nReadyArray(0) => buffI_1_nReadyArray_0,
	validArray(0) => buffI_1_validArray_0,
	dataOutArray(0) => buffI_1_dataOutArray_0
);

buffA_2: entity work.elasticBuffer(arch) generic map (1,1,1,1)
port map (
	clk => buffA_2_clk,
	rst => buffA_2_rst,
	dataInArray(0) => buffA_2_dataInArray_0,
	pValidArray(0) => buffA_2_pValidArray_0,
	readyArray(0) => buffA_2_readyArray_0,
	nReadyArray(0) => buffA_2_nReadyArray_0,
	validArray(0) => buffA_2_validArray_0,
	dataOutArray(0) => buffA_2_dataOutArray_0
);

end behavioral; 
